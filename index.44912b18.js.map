{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_class_private_method_get.js","node_modules/@swc/helpers/esm/_class_private_method_init.js","node_modules/@swc/helpers/esm/_check_private_redeclaration.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/* eslint-disable no-shadow */ var $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $ac6739cbe5bf1c84$export$71511d61b312f219(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n    return fn;\n}\n\n\nfunction $f86983e96b0c893e$export$71511d61b312f219(obj, privateCollection) {\n    if (privateCollection.has(obj)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\n\n\nfunction $ea91727f98d0802f$export$71511d61b312f219(obj, privateSet) {\n    (0, $f86983e96b0c893e$export$71511d61b312f219)(obj, privateSet);\n    privateSet.add(obj);\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$_reverseColumns = /*#__PURE__*/ new WeakSet();\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialValue) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_reverseColumns);\n        this.board = initialValue || [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"idle\";\n        this.previousState = JSON.parse(JSON.stringify(this.board));\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(row) {\n                    var newRow = _this.board[row].filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var col = 0; col < newRow.length - 1; col++)if (newRow[col] === newRow[col + 1]) {\n                        newRow[col] *= 2;\n                        _this.score += newRow[col];\n                        newRow[col + 1] = 0;\n                        moved = true;\n                    }\n                    newRow = newRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newRow.length < 4)newRow.push(0);\n                    if (!moved && !_this.board[row].every(function(value, index) {\n                        return value === newRow[index];\n                    })) moved = true;\n                    _this.board[row] = newRow;\n                };\n                var moved = false;\n                for(var row = 0; row < 4; row++)_loop(row);\n                if (moved) this.generateTile();\n                return moved;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.board = this.board.map(function(row) {\n                    return row.reverse();\n                });\n                var moved = this.moveLeft();\n                this.board = this.board.map(function(row) {\n                    return row.reverse();\n                });\n                return moved;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(col) {\n                    var column = [];\n                    for(var row = 0; row < 4; row++)if (_this.board[row][col] !== 0) column.push(_this.board[row][col]);\n                    for(var i = 0; i < column.length - 1; i++)if (column[i] === column[i + 1]) {\n                        column[i] *= 2;\n                        _this.score += column[i];\n                        column[i + 1] = 0;\n                        moved = true;\n                    }\n                    column = column.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(column.length < 4)column.push(0);\n                    for(var row1 = 0; row1 < 4; row1++){\n                        if (_this.board[row1][col] !== column[row1]) moved = true;\n                        _this.board[row1][col] = column[row1];\n                    }\n                };\n                var moved = false;\n                for(var col = 0; col < 4; col++)_loop(col);\n                if (moved) this.generateTile();\n                return moved;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_reverseColumns, $3d28d7f1aac198f5$var$reverseColumns).call(this);\n                var moved = this.moveUp();\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_reverseColumns, $3d28d7f1aac198f5$var$reverseColumns).call(this);\n                return moved;\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"isWinner\",\n            value: function isWinner() {\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = \"win\";\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                if (this.board.some(function(row) {\n                    return row.includes(0);\n                })) return false;\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var current = this.board[row][col];\n                    if (col < 3 && current === this.board[row][col + 1]) return false;\n                    if (row < 3 && current === this.board[row + 1][col]) return false;\n                    if (row < 3 && current === this.board[row + 1][col]) return false;\n                    if (row > 0 && current === this.board[row - 1][col]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = \"playing\";\n                this.generateTile();\n                this.generateTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"generateTile\",\n            value: function generateTile() {\n                var emptyCells = [];\n                // eslint-disable-next-line no-shadow\n                for(var row = 0; row < 4; row++){\n                    // eslint-disable-next-line no-shadow\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], row1 = _emptyCells_Math_floor.row, col1 = _emptyCells_Math_floor.col;\n                this.board[row1][col1] = Math.random() < 0.9 ? 2 : 4;\n            }\n        }\n    ]);\n    return Game;\n}();\nfunction $3d28d7f1aac198f5$var$reverseColumns() {\n    for(var col = 0; col < 4; col++)for(var row = 0; row < 2; row++){\n        var temp = this.board[row][col];\n        this.board[row][col] = this.board[3 - row][col];\n        this.board[3 - row][col] = temp;\n    }\n}\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\n$197cd56b15c33885$var$addFavicon(\"/images/favicon.png\");\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$renderBoard($197cd56b15c33885$var$game);\n        $197cd56b15c33885$var$updateMessage();\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$renderBoard($197cd56b15c33885$var$game);\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$updateMessage(\"start\");\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if (e.defaultPrevented || $197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var moved = false;\n    switch(e.key){\n        case \"ArrowLeft\":\n            moved = $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            moved = $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            moved = $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            moved = $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    if (moved) {\n        $197cd56b15c33885$var$renderBoard($197cd56b15c33885$var$game);\n        if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n            $197cd56b15c33885$var$button.classList.remove(\"start\");\n            $197cd56b15c33885$var$button.classList.add(\"restart\");\n            $197cd56b15c33885$var$button.textContent = \"Restart\";\n        }\n        if ($197cd56b15c33885$var$game.isWinner()) {\n            $197cd56b15c33885$var$updateMessage(\"win\");\n            $197cd56b15c33885$var$button.classList.remove(\"restart\");\n            $197cd56b15c33885$var$button.classList.add(\"start\");\n            $197cd56b15c33885$var$button.textContent = \"Start\";\n            return;\n        }\n        if ($197cd56b15c33885$var$game.isGameOver()) {\n            $197cd56b15c33885$var$updateMessage(\"lose\");\n            // button.classList.remove('restart');\n            // button.classList.add('start');\n            // button.textContent = 'Start';\n            return;\n        }\n    }\n    e.preventDefault();\n});\nfunction $197cd56b15c33885$var$renderBoard(game) {\n    var board = game.getState();\n    var cells = document.querySelectorAll(\".field-cell\");\n    for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n        var cellIndex = row * 4 + col;\n        var cell = cells[cellIndex];\n        if (board[row][col] === 0) {\n            cell.textContent = \"\";\n            cell.className = \"field-cell\";\n        } else {\n            cell.textContent = board[row][col];\n            cell.className = \"field-cell field-cell--\".concat(board[row][col]);\n        }\n    }\n    var scoreElement = document.querySelector(\".game-score\");\n    var score = game.getScore();\n    scoreElement.innerHTML = \"\";\n    scoreElement.textContent = score;\n}\nfunction $197cd56b15c33885$var$updateMessage(type) {\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    if (type === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    else if (type === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    else if (type === \"start\") $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$addFavicon(url) {\n    var link = document.createElement(\"link\");\n    link.rel = \"icon\";\n    link.href = url;\n    link.setAttribute(\"type\", \"image/png\");\n    // Remove any existing favicons\n    var existingFavicon = document.querySelector(\"link[rel='icon']\");\n    if (existingFavicon) document.head.removeChild(existingFavicon);\n    document.head.appendChild(link);\n}\n\n})();\n//# sourceMappingURL=index.44912b18.js.map\n","/* eslint-disable no-shadow */\n'use strict';\n\nimport Game from '../modules/Game.class.js';\naddFavicon('/images/favicon.png');\n\nconst game = new Game();\nconst button = document.querySelector('.button');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    game.start();\n    renderBoard(game);\n    updateMessage();\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n  } else {\n    game.restart();\n    renderBoard(game);\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.textContent = 'Start';\n    updateMessage('start');\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.defaultPrevented || game.getStatus() !== 'playing') {\n    return;\n  }\n\n  let moved = false;\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      moved = game.moveLeft();\n      break;\n    case 'ArrowRight':\n      moved = game.moveRight();\n      break;\n    case 'ArrowUp':\n      moved = game.moveUp();\n      break;\n    case 'ArrowDown':\n      moved = game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  if (moved) {\n    renderBoard(game);\n\n    if (button.classList.contains('start')) {\n      button.classList.remove('start');\n      button.classList.add('restart');\n      button.textContent = 'Restart';\n    }\n\n    if (game.isWinner()) {\n      updateMessage('win');\n      button.classList.remove('restart');\n      button.classList.add('start');\n      button.textContent = 'Start';\n\n      return;\n    }\n\n    if (game.isGameOver()) {\n      updateMessage('lose');\n      // button.classList.remove('restart');\n      // button.classList.add('start');\n      // button.textContent = 'Start';\n\n      return;\n    }\n  }\n\n  e.preventDefault();\n});\n\nfunction renderBoard(game) {\n  const board = game.getState();\n  const cells = document.querySelectorAll('.field-cell');\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      const cellIndex = row * 4 + col;\n      const cell = cells[cellIndex];\n\n      if (board[row][col] === 0) {\n        cell.textContent = '';\n        cell.className = 'field-cell';\n      } else {\n        cell.textContent = board[row][col];\n        cell.className = `field-cell field-cell--${board[row][col]}`;\n      }\n    }\n  }\n\n  const scoreElement = document.querySelector('.game-score');\n  const score = game.getScore();\n\n  scoreElement.innerHTML = '';\n  scoreElement.textContent = score;\n}\n\nfunction updateMessage(type) {\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  if (type === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (type === 'lose') {\n    messageLose.classList.remove('hidden');\n  } else if (type === 'start') {\n    messageStart.classList.remove('hidden');\n  }\n}\n\nfunction addFavicon(url) {\n  const link = document.createElement('link');\n\n  link.rel = 'icon';\n  link.href = url;\n  link.setAttribute('type', 'image/png');\n\n  // Remove any existing favicons\n  const existingFavicon = document.querySelector(\"link[rel='icon']\");\n\n  if (existingFavicon) {\n    document.head.removeChild(existingFavicon);\n  }\n\n  document.head.appendChild(link);\n}\n","'use strict';\n\nclass Game {\n  /**\n   * Створює новий екземпляр гри 2048.\n   * @param {number[][]} initialValue - Початковий стан поля (4x4 матриця).\n   * Якщо не задано, поле ініціалізується порожнім.\n   */\n  constructor(initialValue) {\n    this.board = initialValue || [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    this.status = 'idle';\n    this.previousState = JSON.parse(JSON.stringify(this.board));\n    // this.isNewTileGenerated = false;\n  }\n\n  moveLeft() {\n    let moved = false;\n\n    for (let row = 0; row < 4; row++) {\n      let newRow = this.board[row].filter((value) => value !== 0);\n\n      for (let col = 0; col < newRow.length - 1; col++) {\n        if (newRow[col] === newRow[col + 1]) {\n          newRow[col] *= 2;\n          this.score += newRow[col];\n          newRow[col + 1] = 0;\n          moved = true;\n        }\n      }\n\n      newRow = newRow.filter((value) => value !== 0);\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      if (\n        !moved &&\n        !this.board[row].every((value, index) => value === newRow[index])\n      ) {\n        moved = true;\n      }\n\n      this.board[row] = newRow;\n    }\n\n    if (moved) {\n      this.generateTile();\n    }\n\n    return moved;\n  }\n\n  moveRight() {\n    this.board = this.board.map((row) => row.reverse());\n\n    const moved = this.moveLeft();\n\n    this.board = this.board.map((row) => row.reverse());\n\n    return moved;\n  }\n\n  moveUp() {\n    let moved = false;\n\n    for (let col = 0; col < 4; col++) {\n      let column = [];\n\n      for (let row = 0; row < 4; row++) {\n        if (this.board[row][col] !== 0) {\n          column.push(this.board[row][col]);\n        }\n      }\n\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          this.score += column[i];\n          column[i + 1] = 0;\n          moved = true;\n        }\n      }\n\n      column = column.filter((value) => value !== 0);\n\n      while (column.length < 4) {\n        column.push(0);\n      }\n\n      for (let row = 0; row < 4; row++) {\n        if (this.board[row][col] !== column[row]) {\n          moved = true;\n        }\n        this.board[row][col] = column[row];\n      }\n    }\n\n    if (moved) {\n      this.generateTile();\n    }\n\n    return moved;\n  }\n\n  moveDown() {\n    this.#reverseColumns();\n\n    const moved = this.moveUp();\n\n    this.#reverseColumns();\n\n    return moved;\n  }\n\n  #reverseColumns() {\n    for (let col = 0; col < 4; col++) {\n      for (let row = 0; row < 2; row++) {\n        const temp = this.board[row][col];\n\n        this.board[row][col] = this.board[3 - row][col];\n        this.board[3 - row][col] = temp;\n      }\n    }\n  }\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  isWinner() {\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    }\n  }\n\n  isGameOver() {\n    if (this.board.some((row) => row.includes(0))) {\n      return false;\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const current = this.board[row][col];\n\n        if (col < 3 && current === this.board[row][col + 1]) {\n          return false;\n        }\n\n        if (row < 3 && current === this.board[row + 1][col]) {\n          return false;\n        }\n\n        if (row < 3 && current === this.board[row + 1][col]) {\n          return false;\n        }\n\n        if (row > 0 && current === this.board[row - 1][col]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  start() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    this.status = 'playing';\n\n    this.generateTile();\n    this.generateTile();\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  generateTile() {\n    const emptyCells = [];\n\n    // eslint-disable-next-line no-shadow\n    for (let row = 0; row < 4; row++) {\n      // eslint-disable-next-line no-shadow\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const { row, col } =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _class_private_method_get(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n\n    return fn;\n}\nexport { _class_private_method_get as _ };\n","import { _ as _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nfunction _class_private_method_init(obj, privateSet) {\n    _check_private_redeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nexport { _class_private_method_init as _ };\n","function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["url","link","existingFavicon","a","$3d28d7f1aac198f5$exports","$ac6739cbe5bf1c84$export$71511d61b312f219","receiver","privateSet","fn","has","TypeError","$3d28d7f1aac198f5$var$_reverseColumns","WeakSet","$3d28d7f1aac198f5$var$reverseColumns","col","row","temp","board","protoProps","Game","initialValue","instance","Constructor","obj","privateCollection","add","score","status","previousState","JSON","parse","stringify","key","value","_this","moved","_loop","newRow","filter","length","push","every","index","generateTile","map","reverse","moveLeft","column","i","row1","call","moveUp","some","includes","current","emptyCells","_emptyCells_Math_floor","Math","floor","random","col1","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","document","createElement","rel","href","setAttribute","querySelector","head","removeChild","appendChild","$197cd56b15c33885$var$game","__esModule","default","$197cd56b15c33885$var$button","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$renderBoard","game","getState","cells","querySelectorAll","cell","textContent","className","concat","scoreElement","getScore","innerHTML","$197cd56b15c33885$var$updateMessage","type","classList","remove","addEventListener","contains","start","restart","e","defaultPrevented","getStatus","moveRight","moveDown","isWinner","isGameOver","preventDefault"],"version":3,"file":"index.44912b18.js.map"}